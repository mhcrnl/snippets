LaTeX Beamer Slide Formatting Framework

Not really a framework, the current folder structure allows one to easily
create LaTeX Beamer slides and publsih them in a variety of formats:
presentation slides, handout, multiple slides per handout etc.


REQUIREMENTS


The packages below are required be installed on your system. These are
Debian-based Linux packages; should be similar on other distributions/OSes.
* texlive-latex-base (LaTeX packages)
* texlive-latex-extra
* texlive-latex-recommended
* latex-beamer (LaTeX Beamer)
* highlight (generates .tex files from source code to be included in slides)
* GNU Make (automating the compilation process)

In case you want to generate image files from Dia and svg input files, you
should also install:
* dia
* inkscape

For viewing slides you need a PDF viewer (evince, okular, Acrobat Reader,
Foxit PDF Reader). For the dual screen view, you require Impressive on
Linux[1][2] and Skim[3] or SplitShow[4] on Mac OS X. See more below.

I highly recommend PDF Presenter Console[5], installable on Linux as the
`pdf-presenter-console' package.


SAMPLE RUN


Typically one would edit the slides.tex file in each chapter folder and use
the Makefile to create PDF slides. A typical use case would be:

---
# Copy sample folder to new chapter folder.
cp -r sample chapter-01

# Go to chapter folder.
cd chapter-01

# Edit Makefile and replace BASENAME value with chapter name (`chapter-01').
vi Makefile

# Edit chapter slides.
vi slides.tex

# Use Makefile to generate Beamer slides. The output file is chapter-01.pdf.
make

# In case you want all slide formats, pass `all' argument to `make'.
# This command generates additional PDF files.
make all
---


TOP LEVEL FOLDER


* README: this file
* sample/: sample slides folder. You should copy this into a new folder and
edit files in that folder accordingly.
* sty/: LaTeX class, themes and package files. You should update this only if
you want to change the Beamer theme or add more packages.
* metafiles/: additional files used throughout the process.
** metafiles/base.mk: Makefile rules to be added into each chapter Makefile
(using the `include' directive).
** metafiles/format: Folder consisting of top-level LaTeX files used for
generating additional slide formats (handout, dual screen etc.).


PER-CHAPTER FILES


A listing of chapter files, as can be seen in the sample/ folder:

* Makefile: chapter Makefile
* slides.tex: actual contents (LaTeX Beamer format)
* code/: source code to be included in Beamer slides, after Highlight
processing
* img/: image files to be included in Beamer slides; may be processed by Dia
and Inkscape


STEPS IN ADDING CONTENT


As stated above, one would create a copy of the sample/ folder into a chapter
folder and update files accordingly.

The first thing to update is the BASENAME variable in the Makefile. This
should be initialized to the chapter file name, such as `chapter-01'.

You would then proceed to editing the slides.tex file, using LaTeX Beamer
formatting.

In case you want to add an image file, you place in the img/ folder and refer
it from the slides. If designing graphics in Dia or Inkscape, you may place
the .dia or .svg file and update the Makefile to generate the PDF file to be
included in the slides. This has the advantage of including a vectorial
graphics file (PDF). Information on this may be found in this wiki page:
https://systems.cs.pub.ro/projects/projects/templates/wiki/Images.

In case you want to add code to the slides, place the source code file in the
code/ folder and update the Makefile accordingly. You may want to update or
create a new `HIGHLIGHT_OPS' variable in order to change text font (the `-K'
option) or the input language (the `-S' option).


GENERATING SLIDES


By default, when running `make' it will generate the standard PDF file (with
overlays) used for the presentation. It uses the name `$(BASENAME).pdf', where
`$(BASENAME)' is the variable defined in the folder Makefile. Something like
`chapter-01.pdf' will be the likely name.

Apart from the slides file there are 5 other types of files to be generated,
according to the filenames in the `metafiles/format/' folder. Each of these
files may be generated by passing a certain option to `make':

* `make handout': Generates a handout set of slides, with no overlays,
useful for printing.
* `make handout-8on1': Generates a handout set of slides, with 8 slide per
page, using A4 pages.
* `make handout-4on1-notes', also `make 4on1': Generates a handout set of
slides, with 4 slides per page, and an adjacent set of `Notes' forms to be
filed with slide explanations. These are ideal to be provided to students.
* `make notes', also `make 8on1': Generates the note slides, using Beamer
notes from the source code file (created using `\note').
* `make dualscreen': Creates a wide set of slides to be diplayed on two
monitors. The left side (the laptop) will show the notes, while the right side
will show the actual slides. This needs specific tools, such as
impressive[1][2] on Linux or Skim[3] or SpliShow[4] on Mac OS X. I've been
unable to compe up with a Window solution for viewing dual screen slides
properly.

All types of slides may be generated by using the `all' option to `make'. I
recommend running multiple jobs to increase speed: `make -j 5 all'.

The output file names use the `$(BASENAME)' variable and the string
identifying the type, as shown in the sample listing below:

---
$ ls sample*
sample-dualscreen.pdf          sample-handout-8on1.pdf  sample-notes.pdf
sample-handout-4on1-notes.pdf  sample-handout.pdf       sample.pdf
---

[1] http://impressive.sourceforge.net/
[2] http://zeekish.wordpress.com/2011/03/18/latex-beamer-presentation-on-dual-display-laptop-projector/
[3] http://skim-app.sourceforge.net/
[4] http://code.google.com/p/splitshow/
[5] https://github.com/jakobwesthoff/Pdf-Presenter-Console


TODOS


* Find a proper way for Windows to render wide slides on two screens.
* Is there a way to fix slide numbers on handout slides? This solution[5]
should work, but only for Beamer since version 3.08.

[5] http://tex.stackexchange.com/questions/49417/dont-skip-framenumbers-in-beamer-in-handout-mode/49806#49806
